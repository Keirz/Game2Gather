{"ast":null,"code":"// https://w3c.github.io/html-aria/#document-conformance-requirements-for-use-of-aria-attributes-in-html\n\n/**\n * Safe Element.localName for all supported environments\n * @param element\n */\nexport function getLocalName(element) {\n  var _element$localName;\n  return (\n    // eslint-disable-next-line no-restricted-properties -- actual guard for environments without localName\n    (_element$localName = element.localName) !== null && _element$localName !== void 0 ? _element$localName :\n    // eslint-disable-next-line no-restricted-properties -- required for the fallback\n    element.tagName.toLowerCase()\n  );\n}\nvar localNameToRoleMappings = {\n  article: \"article\",\n  aside: \"complementary\",\n  button: \"button\",\n  datalist: \"listbox\",\n  dd: \"definition\",\n  details: \"group\",\n  dialog: \"dialog\",\n  dt: \"term\",\n  fieldset: \"group\",\n  figure: \"figure\",\n  // WARNING: Only with an accessible name\n  form: \"form\",\n  footer: \"contentinfo\",\n  h1: \"heading\",\n  h2: \"heading\",\n  h3: \"heading\",\n  h4: \"heading\",\n  h5: \"heading\",\n  h6: \"heading\",\n  header: \"banner\",\n  hr: \"separator\",\n  html: \"document\",\n  legend: \"legend\",\n  li: \"listitem\",\n  math: \"math\",\n  main: \"main\",\n  menu: \"list\",\n  nav: \"navigation\",\n  ol: \"list\",\n  optgroup: \"group\",\n  // WARNING: Only in certain context\n  option: \"option\",\n  output: \"status\",\n  progress: \"progressbar\",\n  // WARNING: Only with an accessible name\n  section: \"region\",\n  summary: \"button\",\n  table: \"table\",\n  tbody: \"rowgroup\",\n  textarea: \"textbox\",\n  tfoot: \"rowgroup\",\n  // WARNING: Only in certain context\n  td: \"cell\",\n  th: \"columnheader\",\n  thead: \"rowgroup\",\n  tr: \"row\",\n  ul: \"list\"\n};\nvar prohibitedAttributes = {\n  caption: new Set([\"aria-label\", \"aria-labelledby\"]),\n  code: new Set([\"aria-label\", \"aria-labelledby\"]),\n  deletion: new Set([\"aria-label\", \"aria-labelledby\"]),\n  emphasis: new Set([\"aria-label\", \"aria-labelledby\"]),\n  generic: new Set([\"aria-label\", \"aria-labelledby\", \"aria-roledescription\"]),\n  insertion: new Set([\"aria-label\", \"aria-labelledby\"]),\n  paragraph: new Set([\"aria-label\", \"aria-labelledby\"]),\n  presentation: new Set([\"aria-label\", \"aria-labelledby\"]),\n  strong: new Set([\"aria-label\", \"aria-labelledby\"]),\n  subscript: new Set([\"aria-label\", \"aria-labelledby\"]),\n  superscript: new Set([\"aria-label\", \"aria-labelledby\"])\n};\n/**\n *\n * @param element\n * @param role The role used for this element. This is specified to control whether you want to use the implicit or explicit role.\n */\n\nfunction hasGlobalAriaAttributes(element, role) {\n  // https://rawgit.com/w3c/aria/stable/#global_states\n  // commented attributes are deprecated\n  return [\"aria-atomic\", \"aria-busy\", \"aria-controls\", \"aria-current\", \"aria-describedby\", \"aria-details\",\n  // \"disabled\",\n  \"aria-dropeffect\",\n  // \"errormessage\",\n  \"aria-flowto\", \"aria-grabbed\",\n  // \"haspopup\",\n  \"aria-hidden\",\n  // \"invalid\",\n  \"aria-keyshortcuts\", \"aria-label\", \"aria-labelledby\", \"aria-live\", \"aria-owns\", \"aria-relevant\", \"aria-roledescription\"].some(function (attributeName) {\n    var _prohibitedAttributes;\n    return element.hasAttribute(attributeName) && !((_prohibitedAttributes = prohibitedAttributes[role]) !== null && _prohibitedAttributes !== void 0 && _prohibitedAttributes.has(attributeName));\n  });\n}\nfunction ignorePresentationalRole(element, implicitRole) {\n  // https://rawgit.com/w3c/aria/stable/#conflict_resolution_presentation_none\n  return hasGlobalAriaAttributes(element, implicitRole);\n}\nexport default function getRole(element) {\n  var explicitRole = getExplicitRole(element);\n  if (explicitRole === null || explicitRole === \"presentation\") {\n    var implicitRole = getImplicitRole(element);\n    if (explicitRole !== \"presentation\" || ignorePresentationalRole(element, implicitRole || \"\")) {\n      return implicitRole;\n    }\n  }\n  return explicitRole;\n}\nfunction getImplicitRole(element) {\n  var mappedByTag = localNameToRoleMappings[getLocalName(element)];\n  if (mappedByTag !== undefined) {\n    return mappedByTag;\n  }\n  switch (getLocalName(element)) {\n    case \"a\":\n    case \"area\":\n    case \"link\":\n      if (element.hasAttribute(\"href\")) {\n        return \"link\";\n      }\n      break;\n    case \"img\":\n      if (element.getAttribute(\"alt\") === \"\" && !ignorePresentationalRole(element, \"img\")) {\n        return \"presentation\";\n      }\n      return \"img\";\n    case \"input\":\n      {\n        var _ref = element,\n          type = _ref.type;\n        switch (type) {\n          case \"button\":\n          case \"image\":\n          case \"reset\":\n          case \"submit\":\n            return \"button\";\n          case \"checkbox\":\n          case \"radio\":\n            return type;\n          case \"range\":\n            return \"slider\";\n          case \"email\":\n          case \"tel\":\n          case \"text\":\n          case \"url\":\n            if (element.hasAttribute(\"list\")) {\n              return \"combobox\";\n            }\n            return \"textbox\";\n          case \"search\":\n            if (element.hasAttribute(\"list\")) {\n              return \"combobox\";\n            }\n            return \"searchbox\";\n          case \"number\":\n            return \"spinbutton\";\n          default:\n            return null;\n        }\n      }\n    case \"select\":\n      if (element.hasAttribute(\"multiple\") || element.size > 1) {\n        return \"listbox\";\n      }\n      return \"combobox\";\n  }\n  return null;\n}\nfunction getExplicitRole(element) {\n  var role = element.getAttribute(\"role\");\n  if (role !== null) {\n    var explicitRole = role.trim().split(\" \")[0]; // String.prototype.split(sep, limit) will always return an array with at least one member\n    // as long as limit is either undefined or > 0\n\n    if (explicitRole.length > 0) {\n      return explicitRole;\n    }\n  }\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}