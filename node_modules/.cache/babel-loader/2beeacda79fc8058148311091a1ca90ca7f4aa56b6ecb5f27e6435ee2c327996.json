{"ast":null,"code":"var _jsxFileName = \"H:\\\\Codebase\\\\Alura\\\\ReactJS\\\\Game2Gather\\\\Game2Gather\\\\src\\\\components\\\\Infos\\\\List.js\";\nimport React from 'react';\nimport PlayerCard from '../PlayerCard';\nimport myData from './data.json';\nimport './List.css';\nimport '../PlayerCard/PlayerCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = props => {\n  //creando uma nova array da array antiga com o json\n  const filteredData = myData.filter(el => {\n    //if  input nulo devolve a array antiga\n    if (props.input === '') {\n      return el;\n    }\n    //retorna a pesquisa com o input do usuario comparando com nome de jogo ou player\n    else {\n      return el.nome.toLowerCase().includes(props.input) || el.game.toLowerCase().includes(props.input);\n    }\n  });\n  return props.input && /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"listaplayers\",\n    children: filteredData.map(item => /*#__PURE__*/_jsxDEV(PlayerCard, {\n      nome: item.nome,\n      position: item.position,\n      tag: item.tag,\n      Disctag: item.Disctag,\n      game: item.game\n    }, item.nome, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","PlayerCard","myData","List","props","filteredData","filter","el","input","nome","toLowerCase","includes","game","map","item","position","tag","Disctag"],"sources":["H:/Codebase/Alura/ReactJS/Game2Gather/Game2Gather/src/components/Infos/List.js"],"sourcesContent":["import React from 'react'\r\nimport PlayerCard from '../PlayerCard'\r\nimport myData from './data.json'\r\nimport './List.css'\r\nimport '../PlayerCard/PlayerCard.css'\r\n\r\nexport const List = (props) => {\r\n    //creando uma nova array da array antiga com o json\r\n    const filteredData = myData.filter((el) => {\r\n        //if  input nulo devolve a array antiga\r\n        if (props.input === '') {\r\n            return el;\r\n        }\r\n        //retorna a pesquisa com o input do usuario comparando com nome de jogo ou player\r\n        else {\r\n            return el.nome.toLowerCase().includes(props.input) || el.game.toLowerCase().includes(props.input)\r\n        }\r\n    })\r\n    \r\n    return (\r\n        (props.input) && \r\n        <ul className='listaplayers'>\r\n            \r\n            {filteredData.map((item) => (\r\n                <PlayerCard key={item.nome} nome={item.nome} position={item.position} tag={item.tag} Disctag={item.Disctag} game={item.game} />\r\n             \r\n            ))}\r\n           \r\n        </ul>\r\n    )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,MAAM,MAAM,aAAa;AAChC,OAAO,YAAY;AACnB,OAAO,8BAA8B;AAAA;AAErC,OAAO,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAC3B;EACA,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAAM,CAAEC,EAAE,IAAK;IACvC;IACA,IAAIH,KAAK,CAACI,KAAK,KAAK,EAAE,EAAE;MACpB,OAAOD,EAAE;IACb;IACA;IAAA,KACK;MACD,OAAOA,EAAE,CAACE,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACP,KAAK,CAACI,KAAK,CAAC,IAAID,EAAE,CAACK,IAAI,CAACF,WAAW,EAAE,CAACC,QAAQ,CAACP,KAAK,CAACI,KAAK,CAAC;IACrG;EACJ,CAAC,CAAC;EAEF,OACKJ,KAAK,CAACI,KAAK,iBACZ;IAAI,SAAS,EAAC,cAAc;IAAA,UAEvBH,YAAY,CAACQ,GAAG,CAAEC,IAAI,iBACnB,QAAC,UAAU;MAAiB,IAAI,EAAEA,IAAI,CAACL,IAAK;MAAC,QAAQ,EAAEK,IAAI,CAACC,QAAS;MAAC,GAAG,EAAED,IAAI,CAACE,GAAI;MAAC,OAAO,EAAEF,IAAI,CAACG,OAAQ;MAAC,IAAI,EAAEH,IAAI,CAACF;IAAK,GAA3GE,IAAI,CAACL,IAAI;MAAA;MAAA;MAAA;IAAA,QAE7B;EAAC;IAAA;IAAA;IAAA;EAAA,QAED;AAEb,CAAC;AAAA,KAxBYN,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}